class Main { public static void main(String[] args) { System.out.println(""); }}

class A {}
class B extends A {}
class C extends B {}

// test correctly overriding a method with a method returning a subtype
class Test1A {
    public A method1(int a, int b) { return new A(); }
    public B method2(int a, int b) { return new B(); }
}

class Test1B extends Test1A {
    public C method1(int a, int b) { return new C(); }
    public C method2(int a, int b) { return new C(); }
}

// test incorrectly overriding a method with a method returning a supertype
class Test2A {
    public B method1(int a, int b) { return new B(); }
    public C method2(int a, int b) { return new C(); }
}

class Test2B extends Test2A {
    public A method1(int a, int b) { return new A(); }
    public A method2(int a, int b) { return new A(); }
}

// test incorrectly overriding a method with parameters that are different types
class Test3A {
    public int method1(A a, B b) { return 0; }
}

class Test3B extends Test3A {
    public int method1(C a, int b) { return 0; }
}

// test correctly overriding a method with a Class return type
class Test4A {
    public C method1(int a, int b) { return new C(); }
}

class Test4B extends Test4A {
    public C method1(int a, int b) { return new C(); }
}
