(MAIN-CLASS (ID Main)
(MAIN-MTD-DECLR (ID args)
(SIDEF (DOT (NEW-OBJECT (ID MergeSort)) (FUN-CALL (ID runBenchmarks))))
)
(CLASS (ID MergeSort)
(MTD-DECL INT (ID runBenchmarks) (TY-ID-LIST )
(BLOCK
(VAR-DECL INT[] (ID a))
(EQSIGN (ID a) (NEW-INT[](INTLIT 5)))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 0)) (INTLIT 3))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 1)) (INTLIT 6))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 2)) (INTLIT 2))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 3)) (INTLIT 1))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 4)) (INTLIT 7))
(SIDEF (DOT THIS (FUN-CALL (ID sort) (ID a))))
(IF (== (ARRAY-INDEX (ID a) (INTLIT 0)) (&& (INTLIT 1) (== (ARRAY-INDEX (ID a) (INTLIT 1)) (&& (INTLIT 2) (== (ARRAY-INDEX (ID a) (INTLIT 2)) (&& (INTLIT 3) (== (ARRAY-INDEX (ID a) (INTLIT 3)) (&& (INTLIT 6) (== (ARRAY-INDEX (ID a) (INTLIT 4)) (INTLIT 7))))))))))
	(BLOCK
(PRINT (STRINGLIT Test 1 [3,6,2,1,7]: Pass)))
	(BLOCK
(PRINT (+ (STRINGLIT Test 1 [3,6,2,1,7]: Fail. Result: [) (+ (ARRAY-INDEX (ID a) (INTLIT 0)) (+ (STRINGLIT ,) (+ (ARRAY-INDEX (ID a) (INTLIT 1)) (+ (STRINGLIT ,) (+ (ARRAY-INDEX (ID a) (INTLIT 2)) (+ (STRINGLIT ,) (+ (ARRAY-INDEX (ID a) (INTLIT 3)) (+ (STRINGLIT ,) (+ (ARRAY-INDEX (ID a) (INTLIT 4)) (STRINGLIT ])))))))))))))
)
(EQSIGN (ID a) (NEW-INT[](INTLIT 5)))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 0)) (INTLIT 9))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 1)) (INTLIT 1))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 2)) (INTLIT 1))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 3)) (- (INTLIT 0) (INTLIT 8)))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 4)) (INTLIT 3))
(SIDEF (DOT THIS (FUN-CALL (ID sort) (ID a))))
(IF (== (ARRAY-INDEX (ID a) (INTLIT 0)) (- (INTLIT 0) (&& (INTLIT 8) (== (ARRAY-INDEX (ID a) (INTLIT 1)) (&& (INTLIT 1) (== (ARRAY-INDEX (ID a) (INTLIT 2)) (&& (INTLIT 1) (== (ARRAY-INDEX (ID a) (INTLIT 3)) (&& (INTLIT 3) (== (ARRAY-INDEX (ID a) (INTLIT 4)) (INTLIT 9)))))))))))
	(BLOCK
(PRINT (STRINGLIT Test 2 [9,1,1,-8,3]: Pass)))
	(BLOCK
(PRINT (+ (STRINGLIT Test 2 [9,1,1,-8,3]: Fail. Result: [) (+ (ARRAY-INDEX (ID a) (INTLIT 0)) (+ (STRINGLIT ,) (+ (ARRAY-INDEX (ID a) (INTLIT 1)) (+ (STRINGLIT ,) (+ (ARRAY-INDEX (ID a) (INTLIT 2)) (+ (STRINGLIT ,) (+ (ARRAY-INDEX (ID a) (INTLIT 3)) (+ (STRINGLIT ,) (+ (ARRAY-INDEX (ID a) (INTLIT 4)) (STRINGLIT ])))))))))))))
)
(EQSIGN (ID a) (NEW-INT[](INTLIT 0)))
(SIDEF (DOT THIS (FUN-CALL (ID sort) (ID a))))
(IF (== (LENGTH) (INTLIT 0))
	(BLOCK
(PRINT (STRINGLIT Test 3 []: Pass)))
	(BLOCK
(PRINT (STRINGLIT Test 3 []: Fail)))
)
(EQSIGN (ID a) (NEW-INT[](INTLIT 1)))
(EQSIGN (ARRAY-INDEX (ID a) (INTLIT 0)) (INTLIT 8))
(SIDEF (DOT THIS (FUN-CALL (ID sort) (ID a))))
(IF (== (ARRAY-INDEX (ID a) (INTLIT 0)) (INTLIT 8))
	(BLOCK
(PRINT (STRINGLIT Test 4 [8]: Pass)))
	(BLOCK
(PRINT (+ (STRINGLIT Test 4 [8]: Fail. Result: [) (+ (ARRAY-INDEX (ID a) (INTLIT 0)) (STRINGLIT ])))))
)
(RETURN (INTLIT 0))))
(MTD-DECL INT (ID sort) (TY-ID-LIST (INT[] (ID list)))
(BLOCK
(VAR-DECL INT[] (ID tmp))
(EQSIGN (ID tmp) (NEW-INT[](LENGTH)))
(RETURN (DOT THIS (FUN-CALL (ID sortHelper) (ID list) (ID tmp) (INTLIT 0) (- (LENGTH) (INTLIT 1)))))))
(MTD-DECL INT (ID sortHelper) (TY-ID-LIST (INT[] (ID list))(INT[] (ID tmp))(INT (ID left))(INT (ID right)))
(BLOCK
(VAR-DECL INT (ID center))
(IF (< (ID left) (ID right))
	(BLOCK
(EQSIGN (ID center) (/ (+ (ID left) (ID right)) (INTLIT 2)))
(SIDEF (DOT THIS (FUN-CALL (ID sortHelper) (ID list) (ID tmp) (ID left) (ID center))))
(SIDEF (DOT THIS (FUN-CALL (ID sortHelper) (ID list) (ID tmp) (+ (ID center) (INTLIT 1)) (ID right))))
(SIDEF (DOT THIS (FUN-CALL (ID merge) (ID list) (ID tmp) (ID left) (+ (ID center) (INTLIT 1)) (ID right)))))
	
)
(RETURN (INTLIT 0))))
(MTD-DECL INT (ID merge) (TY-ID-LIST (INT[] (ID list))(INT[] (ID tmp))(INT (ID left))(INT (ID right))(INT (ID rightEnd)))
(BLOCK
(VAR-DECL INT (ID leftEnd))
(VAR-DECL INT (ID k))
(VAR-DECL INT (ID num))
(VAR-DECL INT (ID i))
(EQSIGN (ID leftEnd) (- (ID right) (INTLIT 1)))
(EQSIGN (ID k) (ID left))
(EQSIGN (ID num) (- (ID rightEnd) (+ (ID left) (INTLIT 1))))
(WHILE (< (ID left) (- (ID leftEnd) (&& (INTLIT 1) (< (ID right) (- (ID rightEnd) (INTLIT 1))))))
	(BLOCK
(IF (< (ARRAY-INDEX (ID list) (ID left)) (ARRAY-INDEX (ID list) (ID right)))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID tmp) (ID k)) (ARRAY-INDEX (ID list) (ID left)))
(EQSIGN (ID left) (+ (ID left) (INTLIT 1))))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID tmp) (ID k)) (ARRAY-INDEX (ID list) (ID right)))
(EQSIGN (ID right) (+ (ID right) (INTLIT 1))))
)
(EQSIGN (ID k) (+ (ID k) (INTLIT 1))))
)
(WHILE (< (ID left) (- (ID leftEnd) (INTLIT 1)))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID tmp) (ID k)) (ARRAY-INDEX (ID list) (ID left)))
(EQSIGN (ID k) (+ (ID k) (INTLIT 1)))
(EQSIGN (ID left) (+ (ID left) (INTLIT 1))))
)
(WHILE (< (ID right) (- (ID rightEnd) (INTLIT 1)))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID tmp) (ID k)) (ARRAY-INDEX (ID list) (ID right)))
(EQSIGN (ID k) (+ (ID k) (INTLIT 1)))
(EQSIGN (ID right) (+ (ID right) (INTLIT 1))))
)
(EQSIGN (ID i) (INTLIT 0))
(WHILE (< (ID i) (ID num))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID list) (ID rightEnd)) (ARRAY-INDEX (ID tmp) (ID rightEnd)))
(EQSIGN (ID i) (+ (ID i) (INTLIT 1)))
(EQSIGN (ID rightEnd) (- (ID rightEnd) (INTLIT 1))))
)
(RETURN (INTLIT 0)))))