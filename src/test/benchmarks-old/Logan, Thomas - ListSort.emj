public class ListSort {

     public static void main ( String [ ] args ) {
         Maker m; List l; int[] arr;
         String arrString; int i;

         m = new Maker();
         l = m.cons(54, m.cons(73, m.cons(7, m.cons(42, m.cons(33, m.cons(7, m.nil()))))));
          System.out.println ("list: " + l.toString()) ;
          System.out.println ("sorted list: " + l.sort().toString()) ;
          arr = l.toArray();
          arrString = "";
          i = 0;
          while (i < arr.length) {
            arrString = arrString + arr[i] + ",";
            i = i + 1;
          }
          System.out.println ("array: " + arrString) ;
     }

}

class Maker {

    public List cons(int x, List xs) {
        Cons cons;

        cons = new Cons();
        cons.x = x; cons.xs = xs;
        cons.m = this;
        return cons;
    } 

    public List nil() {
        return new Nil();
    } 
}

class List {
  public String tag() {
    return "";
  }

  public int length() {
    return 0;
  }

  public List insert(int _x) {
    return this;
  }

  public List sort() {
    return this;
  }

  public int[] toArray() {
    return new int[0];
  }

  public String toString() {
    return ""; 
  }

}

class Nil extends List {
  public String tag() {
    return "Nil";
  }

  public String toString() {
    return "nil"; 
  }
}

class Cons extends List {

  int x;
  List xs;
  Maker m;

  public String tag() {
    return "Cons";
  }

  public int length() {
    return 1 + xs.length();
  }

  public List insert(int _x) {
    if (_x <= x) {
      return m.cons(_x, this);
    } else {
      return m.cons(x, xs.insert(_x));
    }
  }

  public List sort() {
    return xs.sort().insert(x);
  }

  public int[] toArray() {
    int l; int[] arr; int i; int[] tlarr;
      l = length();
      arr = new int[l];
    arr[0] = x;
    i = 1;
    tlarr = xs.toArray();
    while (i < l) {
      arr[i] = tlarr[i - 1];
      i = i + 1;
    }
    return arr;
  }

  public String toString() {
    return x + "::" + xs.toString(); 
  }

}
