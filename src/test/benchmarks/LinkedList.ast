(MAIN-CLASS (ID LinkedList)
(MAIN-MTD-DECLR (ID a) (BLOCK
(PRINT (DOT (NEW-OBJECT (ID LL)) (FUN-CALL)))
))

(CLASS (ID Element)
(VAR-DECL INT (ID Age))
(VAR-DECL INT (ID Salary))
(VAR-DECL BOOLEAN (ID Married))
(MTD-DECL BOOLEAN (ID Init) (TY-ID-LIST (INT (ID v_Age))(INT (ID v_Salary))(BOOLEAN (ID v_Married)))(BLOCK

(EQSIGN (ID Age) (ID v_Age))(EQSIGN (ID Salary) (ID v_Salary))(EQSIGN (ID Married) (ID v_Married))	
(RETURN TRUE)))
(MTD-DECL INT (ID GetAge) (TY-ID-LIST )(BLOCK

	
(RETURN (ID Age))))
(MTD-DECL INT (ID GetSalary) (TY-ID-LIST )(BLOCK

	
(RETURN (ID Salary))))
(MTD-DECL BOOLEAN (ID GetMarried) (TY-ID-LIST )(BLOCK

	
(RETURN (ID Married))))
(MTD-DECL BOOLEAN (ID Equal) (TY-ID-LIST ((ID Element) (ID other)))(BLOCK
	(VAR-DECL BOOLEAN (ID ret_val))	(VAR-DECL INT (ID aux01))	(VAR-DECL INT (ID aux02))	(VAR-DECL INT (ID nt))
(EQSIGN (ID ret_val) TRUE)(EQSIGN (ID aux01) (DOT (ID other) (FUN-CALL)))	(IF (NOT (DOT THIS (FUN-CALL (ID aux01) (ID Age))))
		(EQSIGN (ID ret_val) FALSE)
		(BLOCK(EQSIGN (ID aux02) (DOT (ID other) (FUN-CALL)))
		(IF (NOT (DOT THIS (FUN-CALL (ID aux02) (ID Salary))))
			(EQSIGN (ID ret_val) FALSE)
						(IF (ID Married)
								(IF (NOT (DOT (ID other) (FUN-CALL)))
					(EQSIGN (ID ret_val) FALSE)
					(EQSIGN (ID nt) (INTLIT 0))
				)
								(IF (DOT (ID other) (FUN-CALL))
					(EQSIGN (ID ret_val) FALSE)
					(EQSIGN (ID nt) (INTLIT 0))
				)
			)
		)
)
	)	
(RETURN (ID ret_val))))
(MTD-DECL BOOLEAN (ID Compare) (TY-ID-LIST (INT (ID num1))(INT (ID num2)))(BLOCK
	(VAR-DECL BOOLEAN (ID retval))	(VAR-DECL INT (ID aux02))
(EQSIGN (ID retval) FALSE)(EQSIGN (ID aux02) (+ (ID num2) (INTLIT 1)))	(IF (< (ID num1) (ID num2))
		(EQSIGN (ID retval) FALSE)
				(IF (NOT (< (ID num1) (ID aux02)))
			(EQSIGN (ID retval) FALSE)
			(EQSIGN (ID retval) TRUE)
		)
	)	
(RETURN (ID retval)))))

(CLASS (ID List)
(VAR-DECL (ID Element) (ID elem))
(VAR-DECL (ID List) (ID next))
(VAR-DECL BOOLEAN (ID end))
(MTD-DECL BOOLEAN (ID Init) (TY-ID-LIST )(BLOCK

(EQSIGN (ID end) TRUE)	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID InitNew) (TY-ID-LIST ((ID Element) (ID v_elem))((ID List) (ID v_next))(BOOLEAN (ID v_end)))(BLOCK

(EQSIGN (ID end) (ID v_end))(EQSIGN (ID elem) (ID v_elem))(EQSIGN (ID next) (ID v_next))	
(RETURN TRUE)))
(MTD-DECL (ID List) (ID Insert) (TY-ID-LIST ((ID Element) (ID new_elem)))(BLOCK
	(VAR-DECL BOOLEAN (ID ret_val))	(VAR-DECL (ID List) (ID aux03))	(VAR-DECL (ID List) (ID aux02))
(EQSIGN (ID aux03) THIS)(EQSIGN (ID aux02) (NEW-OBJECT (ID List)))(EQSIGN (ID ret_val) (DOT (ID aux02) (FUN-CALL (ID new_elem) (ID aux03) FALSE)))	
(RETURN (ID aux02))))
(MTD-DECL BOOLEAN (ID SetNext) (TY-ID-LIST ((ID List) (ID v_next)))(BLOCK

(EQSIGN (ID next) (ID v_next))	
(RETURN TRUE)))
(MTD-DECL (ID List) (ID Delete) (TY-ID-LIST ((ID Element) (ID e)))(BLOCK
	(VAR-DECL (ID List) (ID my_head))	(VAR-DECL BOOLEAN (ID ret_val))	(VAR-DECL BOOLEAN (ID aux05))	(VAR-DECL (ID List) (ID aux01))	(VAR-DECL (ID List) (ID prev))	(VAR-DECL BOOLEAN (ID var_end))	(VAR-DECL (ID Element) (ID var_elem))	(VAR-DECL INT (ID aux04))	(VAR-DECL INT (ID nt))
(EQSIGN (ID my_head) THIS)(EQSIGN (ID ret_val) FALSE)(EQSIGN (ID aux04) (- (INTLIT 0) (INTLIT 1)))(EQSIGN (ID aux01) THIS)(EQSIGN (ID prev) THIS)(EQSIGN (ID var_end) (ID end))(EQSIGN (ID var_elem) (ID elem))(WHILE (&& (NOT (ID var_end)) (NOT (ID ret_val)))
	(BLOCK	(IF (DOT (ID e) (FUN-CALL (ID var_elem)))
		(BLOCK(EQSIGN (ID ret_val) TRUE)
		(IF (< (ID aux04) (INTLIT 0))
			(BLOCK(EQSIGN (ID my_head) (DOT (ID aux01) (FUN-CALL)))
)
			(BLOCK(PRINT (- (INTLIT 0) (INTLIT 555)))
(EQSIGN (ID aux05) (DOT (ID prev) (FUN-CALL (DOT (ID aux01) (FUN-CALL)))))
(PRINT (- (INTLIT 0) (INTLIT 555)))
)
		)
)
		(EQSIGN (ID nt) (INTLIT 0))
	)
	(IF (NOT (ID ret_val))
		(BLOCK(EQSIGN (ID prev) (ID aux01))
(EQSIGN (ID aux01) (DOT (ID aux01) (FUN-CALL)))
(EQSIGN (ID var_end) (DOT (ID aux01) (FUN-CALL)))
(EQSIGN (ID var_elem) (DOT (ID aux01) (FUN-CALL)))
(EQSIGN (ID aux04) (INTLIT 1))
)
		(EQSIGN (ID nt) (INTLIT 0))
	)
)
)	
(RETURN (ID my_head))))
(MTD-DECL INT (ID Search) (TY-ID-LIST ((ID Element) (ID e)))(BLOCK
	(VAR-DECL INT (ID int_ret_val))	(VAR-DECL (ID List) (ID aux01))	(VAR-DECL (ID Element) (ID var_elem))	(VAR-DECL BOOLEAN (ID var_end))	(VAR-DECL INT (ID nt))
(EQSIGN (ID int_ret_val) (INTLIT 0))(EQSIGN (ID aux01) THIS)(EQSIGN (ID var_end) (ID end))(EQSIGN (ID var_elem) (ID elem))(WHILE (NOT (ID var_end))
	(BLOCK	(IF (DOT (ID e) (FUN-CALL (ID var_elem)))
		(BLOCK(EQSIGN (ID int_ret_val) (INTLIT 1))
)
		(EQSIGN (ID nt) (INTLIT 0))
	)
(EQSIGN (ID aux01) (DOT (ID aux01) (FUN-CALL)))
(EQSIGN (ID var_end) (DOT (ID aux01) (FUN-CALL)))
(EQSIGN (ID var_elem) (DOT (ID aux01) (FUN-CALL)))
)
)	
(RETURN (ID int_ret_val))))
(MTD-DECL BOOLEAN (ID GetEnd) (TY-ID-LIST )(BLOCK

	
(RETURN (ID end))))
(MTD-DECL (ID Element) (ID GetElem) (TY-ID-LIST )(BLOCK

	
(RETURN (ID elem))))
(MTD-DECL (ID List) (ID GetNext) (TY-ID-LIST )(BLOCK

	
(RETURN (ID next))))
(MTD-DECL BOOLEAN (ID Print) (TY-ID-LIST )(BLOCK
	(VAR-DECL (ID List) (ID aux01))	(VAR-DECL BOOLEAN (ID var_end))	(VAR-DECL (ID Element) (ID var_elem))
(EQSIGN (ID aux01) THIS)(EQSIGN (ID var_end) (ID end))(EQSIGN (ID var_elem) (ID elem))(WHILE (NOT (ID var_end))
	(BLOCK(PRINT (DOT (ID var_elem) (FUN-CALL)))
(EQSIGN (ID aux01) (DOT (ID aux01) (FUN-CALL)))
(EQSIGN (ID var_end) (DOT (ID aux01) (FUN-CALL)))
(EQSIGN (ID var_elem) (DOT (ID aux01) (FUN-CALL)))
)
)	
(RETURN TRUE))))

(CLASS (ID LL)
(MTD-DECL INT (ID Start) (TY-ID-LIST )(BLOCK
	(VAR-DECL (ID List) (ID head))	(VAR-DECL (ID List) (ID last_elem))	(VAR-DECL BOOLEAN (ID aux01))	(VAR-DECL (ID Element) (ID el01))	(VAR-DECL (ID Element) (ID el02))	(VAR-DECL (ID Element) (ID el03))
(EQSIGN (ID last_elem) (NEW-OBJECT (ID List)))(EQSIGN (ID aux01) (DOT (ID last_elem) (FUN-CALL)))(EQSIGN (ID head) (ID last_elem))(EQSIGN (ID aux01) (DOT (ID head) (FUN-CALL)))(EQSIGN (ID aux01) (DOT (ID head) (FUN-CALL)))(EQSIGN (ID el01) (NEW-OBJECT (ID Element)))(EQSIGN (ID aux01) (DOT (ID el01) (FUN-CALL (INTLIT 25) (INTLIT 37000) FALSE)))(EQSIGN (ID head) (DOT (ID head) (FUN-CALL (ID el01))))(EQSIGN (ID aux01) (DOT (ID head) (FUN-CALL)))(PRINT (INTLIT 10000000))(EQSIGN (ID el01) (NEW-OBJECT (ID Element)))(EQSIGN (ID aux01) (DOT (ID el01) (FUN-CALL (INTLIT 39) (INTLIT 42000) TRUE)))(EQSIGN (ID el02) (ID el01))(EQSIGN (ID head) (DOT (ID head) (FUN-CALL (ID el01))))(EQSIGN (ID aux01) (DOT (ID head) (FUN-CALL)))(PRINT (INTLIT 10000000))(EQSIGN (ID el01) (NEW-OBJECT (ID Element)))(EQSIGN (ID aux01) (DOT (ID el01) (FUN-CALL (INTLIT 22) (INTLIT 34000) FALSE)))(EQSIGN (ID head) (DOT (ID head) (FUN-CALL (ID el01))))(EQSIGN (ID aux01) (DOT (ID head) (FUN-CALL)))(EQSIGN (ID el03) (NEW-OBJECT (ID Element)))(EQSIGN (ID aux01) (DOT (ID el03) (FUN-CALL (INTLIT 27) (INTLIT 34000) FALSE)))(PRINT (DOT (ID head) (FUN-CALL (ID el02))))(PRINT (DOT (ID head) (FUN-CALL (ID el03))))(PRINT (INTLIT 10000000))(EQSIGN (ID el01) (NEW-OBJECT (ID Element)))(EQSIGN (ID aux01) (DOT (ID el01) (FUN-CALL (INTLIT 28) (INTLIT 35000) FALSE)))(EQSIGN (ID head) (DOT (ID head) (FUN-CALL (ID el01))))(EQSIGN (ID aux01) (DOT (ID head) (FUN-CALL)))(PRINT (INTLIT 2220000))(EQSIGN (ID head) (DOT (ID head) (FUN-CALL (ID el02))))(EQSIGN (ID aux01) (DOT (ID head) (FUN-CALL)))(PRINT (INTLIT 33300000))(EQSIGN (ID head) (DOT (ID head) (FUN-CALL (ID el01))))(EQSIGN (ID aux01) (DOT (ID head) (FUN-CALL)))(PRINT (INTLIT 44440000))	
(RETURN (INTLIT 0)))))