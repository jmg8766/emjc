(MAIN-CLASS (ID TreeVisitor)
(MAIN-MTD-DECLR (ID a)
(PRINT (DOT (NEW-OBJECT (ID TV)) (FUN-CALL (ID Start))))
)
(CLASS (ID TV)
(MTD-DECL INT (ID Start) (TY-ID-LIST )
(BLOCK
(VAR-DECL (ID Tree) (ID root))
(VAR-DECL BOOLEAN (ID ntb))
(VAR-DECL INT (ID nti))
(VAR-DECL (ID MyVisitor) (ID v))
(EQSIGN (ID root) (NEW-OBJECT (ID Tree)))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Init) (INTLIT 16))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Print))))
(PRINT (INTLIT 100000000))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Insert) (INTLIT 8))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Insert) (INTLIT 24))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Insert) (INTLIT 4))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Insert) (INTLIT 12))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Insert) (INTLIT 20))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Insert) (INTLIT 28))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Insert) (INTLIT 14))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Print))))
(PRINT (INTLIT 100000000))
(EQSIGN (ID v) (NEW-OBJECT (ID MyVisitor)))
(PRINT (INTLIT 50000000))
(EQSIGN (ID nti) (DOT (ID root) (FUN-CALL (ID accept) (ID v))))
(PRINT (INTLIT 100000000))
(PRINT (DOT (ID root) (FUN-CALL (ID Search) (INTLIT 24))))
(PRINT (DOT (ID root) (FUN-CALL (ID Search) (INTLIT 12))))
(PRINT (DOT (ID root) (FUN-CALL (ID Search) (INTLIT 16))))
(PRINT (DOT (ID root) (FUN-CALL (ID Search) (INTLIT 50))))
(PRINT (DOT (ID root) (FUN-CALL (ID Search) (INTLIT 12))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Delete) (INTLIT 12))))
(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (ID Print))))
(PRINT (DOT (ID root) (FUN-CALL (ID Search) (INTLIT 12))))
(RETURN (INTLIT 0)))))
(CLASS (ID Tree)
(VAR-DECL (ID Tree) (ID left))
(VAR-DECL (ID Tree) (ID right))
(VAR-DECL INT (ID key))
(VAR-DECL BOOLEAN (ID has_left))
(VAR-DECL BOOLEAN (ID has_right))
(VAR-DECL (ID Tree) (ID my_null))
(MTD-DECL BOOLEAN (ID Init) (TY-ID-LIST (INT (ID v_key)))
(BLOCK
(EQSIGN (ID key) (ID v_key))
(EQSIGN (ID has_left) false)
(EQSIGN (ID has_right) false)
(RETURN true)))
(MTD-DECL BOOLEAN (ID SetRight) (TY-ID-LIST ((ID Tree) (ID rn)))
(BLOCK
(EQSIGN (ID right) (ID rn))
(RETURN true)))
(MTD-DECL BOOLEAN (ID SetLeft) (TY-ID-LIST ((ID Tree) (ID ln)))
(BLOCK
(EQSIGN (ID left) (ID ln))
(RETURN true)))
(MTD-DECL (ID Tree) (ID GetRight) (TY-ID-LIST )
(BLOCK
(RETURN (ID right))))
(MTD-DECL (ID Tree) (ID GetLeft) (TY-ID-LIST )
(BLOCK
(RETURN (ID left))))
(MTD-DECL INT (ID GetKey) (TY-ID-LIST )
(BLOCK
(RETURN (ID key))))
(MTD-DECL BOOLEAN (ID SetKey) (TY-ID-LIST (INT (ID v_key)))
(BLOCK
(EQSIGN (ID key) (ID v_key))
(RETURN true)))
(MTD-DECL BOOLEAN (ID GetHas_Right) (TY-ID-LIST )
(BLOCK
(RETURN (ID has_right))))
(MTD-DECL BOOLEAN (ID GetHas_Left) (TY-ID-LIST )
(BLOCK
(RETURN (ID has_left))))
(MTD-DECL BOOLEAN (ID SetHas_Left) (TY-ID-LIST (BOOLEAN (ID val)))
(BLOCK
(EQSIGN (ID has_left) (ID val))
(RETURN true)))
(MTD-DECL BOOLEAN (ID SetHas_Right) (TY-ID-LIST (BOOLEAN (ID val)))
(BLOCK
(EQSIGN (ID has_right) (ID val))
(RETURN true)))
(MTD-DECL BOOLEAN (ID Compare) (TY-ID-LIST (INT (ID num1))(INT (ID num2)))
(BLOCK
(VAR-DECL BOOLEAN (ID ntb))
(VAR-DECL INT (ID nti))
(EQSIGN (ID ntb) false)
(EQSIGN (ID nti) (+ (ID num2) (INTLIT 1)))
(IF (< (ID num1) (ID num2))
	(EQSIGN (ID ntb) false)
	(IF (NOT (< (ID num1) (ID nti)))
	(EQSIGN (ID ntb) false)
	(EQSIGN (ID ntb) true)
)
)
(RETURN (ID ntb))))
(MTD-DECL BOOLEAN (ID Insert) (TY-ID-LIST (INT (ID v_key)))
(BLOCK
(VAR-DECL (ID Tree) (ID new_node))
(VAR-DECL BOOLEAN (ID ntb))
(VAR-DECL (ID Tree) (ID current_node))
(VAR-DECL BOOLEAN (ID cont))
(VAR-DECL INT (ID key_aux))
(EQSIGN (ID new_node) (NEW-OBJECT (ID Tree)))
(EQSIGN (ID ntb) (DOT (ID new_node) (FUN-CALL (ID Init) (ID v_key))))
(EQSIGN (ID current_node) THIS)
(EQSIGN (ID cont) true)
(WHILE (ID cont)
	(BLOCK
(EQSIGN (ID key_aux) (DOT (ID current_node) (FUN-CALL (ID GetKey))))
(IF (< (ID v_key) (ID key_aux))
	(BLOCK
(IF (DOT (ID current_node) (FUN-CALL (ID GetHas_Left)))
	(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL (ID GetLeft))))
	(BLOCK
(EQSIGN (ID cont) false)
(EQSIGN (ID ntb) (DOT (ID current_node) (FUN-CALL (ID SetHas_Left) true)))
(EQSIGN (ID ntb) (DOT (ID current_node) (FUN-CALL (ID SetLeft) (ID new_node)))))
))
	(BLOCK
(IF (DOT (ID current_node) (FUN-CALL (ID GetHas_Right)))
	(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL (ID GetRight))))
	(BLOCK
(EQSIGN (ID cont) false)
(EQSIGN (ID ntb) (DOT (ID current_node) (FUN-CALL (ID SetHas_Right) true)))
(EQSIGN (ID ntb) (DOT (ID current_node) (FUN-CALL (ID SetRight) (ID new_node)))))
))
))
)
(RETURN true)))
(MTD-DECL BOOLEAN (ID Delete) (TY-ID-LIST (INT (ID v_key)))
(BLOCK
(VAR-DECL (ID Tree) (ID current_node))
(VAR-DECL (ID Tree) (ID parent_node))
(VAR-DECL BOOLEAN (ID cont))
(VAR-DECL BOOLEAN (ID found))
(VAR-DECL BOOLEAN (ID ntb))
(VAR-DECL BOOLEAN (ID is_root))
(VAR-DECL INT (ID key_aux))
(EQSIGN (ID current_node) THIS)
(EQSIGN (ID parent_node) THIS)
(EQSIGN (ID cont) true)
(EQSIGN (ID found) false)
(EQSIGN (ID is_root) true)
(WHILE (ID cont)
	(BLOCK
(EQSIGN (ID key_aux) (DOT (ID current_node) (FUN-CALL (ID GetKey))))
(IF (< (ID v_key) (ID key_aux))
	(IF (DOT (ID current_node) (FUN-CALL (ID GetHas_Left)))
	(BLOCK
(EQSIGN (ID parent_node) (ID current_node))
(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL (ID GetLeft)))))
	(EQSIGN (ID cont) false)
)
	(IF (< (ID key_aux) (ID v_key))
	(IF (DOT (ID current_node) (FUN-CALL (ID GetHas_Right)))
	(BLOCK
(EQSIGN (ID parent_node) (ID current_node))
(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL (ID GetRight)))))
	(EQSIGN (ID cont) false)
)
	(BLOCK
(IF (ID is_root)
	(IF (NOT (&& (DOT (ID current_node) (FUN-CALL (ID GetHas_Right))) (NOT (DOT (ID current_node) (FUN-CALL (ID GetHas_Left))))))
	(EQSIGN (ID ntb) true)
	(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID Remove) (ID parent_node) (ID current_node))))
)
	(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID Remove) (ID parent_node) (ID current_node))))
)
(EQSIGN (ID found) true)
(EQSIGN (ID cont) false))
)
)
(EQSIGN (ID is_root) false))
)
(RETURN (ID found))))
(MTD-DECL BOOLEAN (ID Remove) (TY-ID-LIST ((ID Tree) (ID p_node))((ID Tree) (ID c_node)))
(BLOCK
(VAR-DECL BOOLEAN (ID ntb))
(VAR-DECL INT (ID auxkey1))
(VAR-DECL INT (ID auxkey2))
(IF (DOT (ID c_node) (FUN-CALL (ID GetHas_Left)))
	(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID RemoveLeft) (ID p_node) (ID c_node))))
	(IF (DOT (ID c_node) (FUN-CALL (ID GetHas_Right)))
	(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID RemoveRight) (ID p_node) (ID c_node))))
	(BLOCK
(EQSIGN (ID auxkey1) (DOT (ID c_node) (FUN-CALL (ID GetKey))))
(EQSIGN (ID auxkey2) (DOT (DOT (ID p_node) (FUN-CALL (ID GetLeft))) (FUN-CALL (ID GetKey))))
(IF (DOT THIS (FUN-CALL (ID Compare) (ID auxkey1) (ID auxkey2)))
	(BLOCK
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID SetLeft) (ID my_null))))
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID SetHas_Left) false))))
	(BLOCK
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID SetRight) (ID my_null))))
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID SetHas_Right) false))))
))
)
)
(RETURN true)))
(MTD-DECL BOOLEAN (ID RemoveRight) (TY-ID-LIST ((ID Tree) (ID p_node))((ID Tree) (ID c_node)))
(BLOCK
(VAR-DECL BOOLEAN (ID ntb))
(WHILE (DOT (ID c_node) (FUN-CALL (ID GetHas_Right)))
	(BLOCK
(EQSIGN (ID ntb) (DOT (ID c_node) (FUN-CALL (ID SetKey) (DOT (DOT (ID c_node) (FUN-CALL (ID GetRight))) (FUN-CALL (ID GetKey))))))
(EQSIGN (ID p_node) (ID c_node))
(EQSIGN (ID c_node) (DOT (ID c_node) (FUN-CALL (ID GetRight)))))
)
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID SetRight) (ID my_null))))
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID SetHas_Right) false)))
(RETURN true)))
(MTD-DECL BOOLEAN (ID RemoveLeft) (TY-ID-LIST ((ID Tree) (ID p_node))((ID Tree) (ID c_node)))
(BLOCK
(VAR-DECL BOOLEAN (ID ntb))
(WHILE (DOT (ID c_node) (FUN-CALL (ID GetHas_Left)))
	(BLOCK
(EQSIGN (ID ntb) (DOT (ID c_node) (FUN-CALL (ID SetKey) (DOT (DOT (ID c_node) (FUN-CALL (ID GetLeft))) (FUN-CALL (ID GetKey))))))
(EQSIGN (ID p_node) (ID c_node))
(EQSIGN (ID c_node) (DOT (ID c_node) (FUN-CALL (ID GetLeft)))))
)
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID SetLeft) (ID my_null))))
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID SetHas_Left) false)))
(RETURN true)))
(MTD-DECL INT (ID Search) (TY-ID-LIST (INT (ID v_key)))
(BLOCK
(VAR-DECL (ID Tree) (ID current_node))
(VAR-DECL INT (ID ifound))
(VAR-DECL BOOLEAN (ID cont))
(VAR-DECL INT (ID key_aux))
(EQSIGN (ID current_node) THIS)
(EQSIGN (ID cont) true)
(EQSIGN (ID ifound) (INTLIT 0))
(WHILE (ID cont)
	(BLOCK
(EQSIGN (ID key_aux) (DOT (ID current_node) (FUN-CALL (ID GetKey))))
(IF (< (ID v_key) (ID key_aux))
	(IF (DOT (ID current_node) (FUN-CALL (ID GetHas_Left)))
	(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL (ID GetLeft))))
	(EQSIGN (ID cont) false)
)
	(IF (< (ID key_aux) (ID v_key))
	(IF (DOT (ID current_node) (FUN-CALL (ID GetHas_Right)))
	(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL (ID GetRight))))
	(EQSIGN (ID cont) false)
)
	(BLOCK
(EQSIGN (ID ifound) (INTLIT 1))
(EQSIGN (ID cont) false))
)
))
)
(RETURN (ID ifound))))
(MTD-DECL BOOLEAN (ID Print) (TY-ID-LIST )
(BLOCK
(VAR-DECL BOOLEAN (ID ntb))
(VAR-DECL (ID Tree) (ID current_node))
(EQSIGN (ID current_node) THIS)
(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID RecPrint) (ID current_node))))
(RETURN true)))
(MTD-DECL BOOLEAN (ID RecPrint) (TY-ID-LIST ((ID Tree) (ID node)))
(BLOCK
(VAR-DECL BOOLEAN (ID ntb))
(IF (DOT (ID node) (FUN-CALL (ID GetHas_Left)))
	(BLOCK
(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID RecPrint) (DOT (ID node) (FUN-CALL (ID GetLeft)))))))
	(EQSIGN (ID ntb) true)
)
(PRINT (DOT (ID node) (FUN-CALL (ID GetKey))))
(IF (DOT (ID node) (FUN-CALL (ID GetHas_Right)))
	(BLOCK
(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID RecPrint) (DOT (ID node) (FUN-CALL (ID GetRight)))))))
	(EQSIGN (ID ntb) true)
)
(RETURN true)))
(MTD-DECL INT (ID accept) (TY-ID-LIST ((ID Visitor) (ID v)))
(BLOCK
(VAR-DECL INT (ID nti))
(PRINT (INTLIT 333))
(EQSIGN (ID nti) (DOT (ID v) (FUN-CALL (ID visit) THIS)))
(RETURN (INTLIT 0)))))
(CLASS (ID Visitor)
(VAR-DECL (ID Tree) (ID l))
(VAR-DECL (ID Tree) (ID r))
(MTD-DECL INT (ID visit) (TY-ID-LIST ((ID Tree) (ID n)))
(BLOCK
(VAR-DECL INT (ID nti))
(IF (DOT (ID n) (FUN-CALL (ID GetHas_Right)))
	(BLOCK
(EQSIGN (ID r) (DOT (ID n) (FUN-CALL (ID GetRight))))
(EQSIGN (ID nti) (DOT (ID r) (FUN-CALL (ID accept) THIS))))
	(EQSIGN (ID nti) (INTLIT 0))
)
(IF (DOT (ID n) (FUN-CALL (ID GetHas_Left)))
	(BLOCK
(EQSIGN (ID l) (DOT (ID n) (FUN-CALL (ID GetLeft))))
(EQSIGN (ID nti) (DOT (ID l) (FUN-CALL (ID accept) THIS))))
	(EQSIGN (ID nti) (INTLIT 0))
)
(RETURN (INTLIT 0)))))
(CLASS (ID MyVisitor)
(MTD-DECL INT (ID visit) (TY-ID-LIST ((ID Tree) (ID n)))
(BLOCK
(VAR-DECL INT (ID nti))
(IF (DOT (ID n) (FUN-CALL (ID GetHas_Right)))
	(BLOCK
(EQSIGN (ID r) (DOT (ID n) (FUN-CALL (ID GetRight))))
(EQSIGN (ID nti) (DOT (ID r) (FUN-CALL (ID accept) THIS))))
	(EQSIGN (ID nti) (INTLIT 0))
)
(PRINT (DOT (ID n) (FUN-CALL (ID GetKey))))
(IF (DOT (ID n) (FUN-CALL (ID GetHas_Left)))
	(BLOCK
(EQSIGN (ID l) (DOT (ID n) (FUN-CALL (ID GetLeft))))
(EQSIGN (ID nti) (DOT (ID l) (FUN-CALL (ID accept) THIS))))
	(EQSIGN (ID nti) (INTLIT 0))
)
(RETURN (INTLIT 0)))))