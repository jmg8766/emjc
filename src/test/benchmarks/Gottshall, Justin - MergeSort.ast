(MAIN-CLASS (ID MergeSort)
(MAIN-MTD-DECLR (ID args)
(SIDEF (DOT (NEW-OBJECT (ID MergeSortPrinter)) (FUN-CALL (ID print))))
)
(CLASS (ID MergeSortPrinter)
(VAR-DECL (ID MergeSorter) (ID sorter))
(VAR-DECL INT[] (ID inputArray))
(VAR-DECL INT (ID i))
(MTD-DECL INT (ID print) (TY-ID-LIST )
(BLOCK
(EQSIGN (ID inputArray) (NEW-INT[](INTLIT 11)))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 0)) (INTLIT 16))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 1)) (INTLIT 13))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 2)) (INTLIT 14))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 3)) (INTLIT 40))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 4)) (INTLIT 3))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 5)) (INTLIT 32))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 6)) (INTLIT 7))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 7)) (INTLIT 22))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 8)) (INTLIT 19))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 9)) (INTLIT 8))
(EQSIGN (ARRAY-INDEX (ID inputArray) (INTLIT 10)) (INTLIT 13))
(EQSIGN (ID sorter) (NEW-OBJECT (ID MergeSorter)))
(SIDEF (DOT (ID sorter) (FUN-CALL (ID setInputArray) (ID inputArray))))
(SIDEF (DOT (ID sorter) (FUN-CALL (ID mergeSort) (INTLIT 0) (- (LENGTH) (INTLIT 1)))))
(EQSIGN (ID i) (INTLIT 0))
(WHILE (< (ID i) (LENGTH))
	(BLOCK
(PRINT (ARRAY-INDEX (DOT (ID sorter) (FUN-CALL (ID getInputArray))) (ID i)))
(EQSIGN (ID i) (+ (ID i) (INTLIT 1))))
)
(RETURN (INTLIT 0)))))
(CLASS (ID MergeSorter)
(VAR-DECL INT[] (ID tempArray))
(VAR-DECL INT[] (ID inputArray))
(MTD-DECL INT (ID mergeSort) (TY-ID-LIST (INT (ID start))(INT (ID end)))
(BLOCK
(VAR-DECL INT (ID middle))
(IF (< (ID start) (ID end))
	(BLOCK
(EQSIGN (ID middle) (/ (+ (ID start) (ID end)) (INTLIT 2)))
(SIDEF (DOT THIS (FUN-CALL (ID mergeSort) (ID start) (ID middle))))
(SIDEF (DOT THIS (FUN-CALL (ID mergeSort) (+ (ID middle) (INTLIT 1)) (ID end))))
(SIDEF (DOT THIS (FUN-CALL (ID merge) (ID start) (ID middle) (ID end)))))
	
)
(RETURN (INTLIT 0))))
(MTD-DECL INT (ID merge) (TY-ID-LIST (INT (ID start))(INT (ID middle))(INT (ID end)))
(BLOCK
(VAR-DECL INT (ID copyPtr))
(VAR-DECL INT (ID sPtr))
(VAR-DECL INT (ID mPtr))
(VAR-DECL INT (ID oPtr))
(EQSIGN (ID copyPtr) (ID start))
(EQSIGN (ID sPtr) (ID start))
(EQSIGN (ID mPtr) (+ (ID middle) (INTLIT 1)))
(EQSIGN (ID oPtr) (ID start))
(WHILE (< (ID copyPtr) (+ (ID end) (INTLIT 1)))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID tempArray) (ID copyPtr)) (ARRAY-INDEX (ID inputArray) (ID copyPtr)))
(EQSIGN (ID copyPtr) (+ (ID copyPtr) (INTLIT 1))))
)
(WHILE (< (ID sPtr) (&& (+ (ID middle) (INTLIT 1)) (< (ID mPtr) (+ (ID end) (INTLIT 1)))))
	(BLOCK
(IF (< (ARRAY-INDEX (ID tempArray) (ID sPtr)) (ARRAY-INDEX (ID tempArray) (ID mPtr)))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID inputArray) (ID oPtr)) (ARRAY-INDEX (ID tempArray) (ID sPtr)))
(EQSIGN (ID oPtr) (+ (ID oPtr) (INTLIT 1)))
(EQSIGN (ID sPtr) (+ (ID sPtr) (INTLIT 1))))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID inputArray) (ID oPtr)) (ARRAY-INDEX (ID tempArray) (ID mPtr)))
(EQSIGN (ID oPtr) (+ (ID oPtr) (INTLIT 1)))
(EQSIGN (ID mPtr) (+ (ID mPtr) (INTLIT 1))))
))
)
(WHILE (< (ID sPtr) (+ (ID middle) (INTLIT 1)))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID inputArray) (ID oPtr)) (ARRAY-INDEX (ID tempArray) (ID sPtr)))
(EQSIGN (ID oPtr) (+ (ID oPtr) (INTLIT 1)))
(EQSIGN (ID sPtr) (+ (ID sPtr) (INTLIT 1))))
)
(WHILE (< (ID mPtr) (+ (ID end) (INTLIT 1)))
	(BLOCK
(EQSIGN (ARRAY-INDEX (ID inputArray) (ID oPtr)) (ARRAY-INDEX (ID tempArray) (ID mPtr)))
(EQSIGN (ID oPtr) (+ (ID oPtr) (INTLIT 1)))
(EQSIGN (ID mPtr) (+ (ID mPtr) (INTLIT 1))))
)
(RETURN (INTLIT 0))))
(MTD-DECL INT (ID setInputArray) (TY-ID-LIST (INT[] (ID newArray)))
(BLOCK
(EQSIGN (ID inputArray) (ID newArray))
(RETURN (INTLIT 0))))
(MTD-DECL INT[] (ID getInputArray) (TY-ID-LIST )
(BLOCK
(RETURN (ID inputArray)))))