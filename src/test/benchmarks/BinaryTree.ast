(MAIN-CLASS (ID BinaryTree)
(MAIN-MTD-DECLR (ID a) (BLOCK
(PRINT (DOT (NEW-OBJECT (ID BT)) (FUN-CALL)))
))

(CLASS (ID BT)
(MTD-DECL INT (ID Start) (TY-ID-LIST )(BLOCK
	(VAR-DECL (ID Tree) (ID root))	(VAR-DECL BOOLEAN (ID ntb))	(VAR-DECL INT (ID nti))
(EQSIGN (ID root) (NEW-OBJECT (ID Tree)))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 16))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL)))(PRINT (INTLIT 100000000))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 8))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL)))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 24))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 4))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 12))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 20))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 28))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 14))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL)))(PRINT (DOT (ID root) (FUN-CALL (INTLIT 24))))(PRINT (DOT (ID root) (FUN-CALL (INTLIT 12))))(PRINT (DOT (ID root) (FUN-CALL (INTLIT 16))))(PRINT (DOT (ID root) (FUN-CALL (INTLIT 50))))(PRINT (DOT (ID root) (FUN-CALL (INTLIT 12))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL (INTLIT 12))))(EQSIGN (ID ntb) (DOT (ID root) (FUN-CALL)))(PRINT (DOT (ID root) (FUN-CALL (INTLIT 12))))	
(RETURN (INTLIT 0)))))

(CLASS (ID Tree)
(VAR-DECL (ID Tree) (ID left))
(VAR-DECL (ID Tree) (ID right))
(VAR-DECL INT (ID key))
(VAR-DECL BOOLEAN (ID has_left))
(VAR-DECL BOOLEAN (ID has_right))
(VAR-DECL (ID Tree) (ID my_null))
(MTD-DECL BOOLEAN (ID Init) (TY-ID-LIST (INT (ID v_key)))(BLOCK

(EQSIGN (ID key) (ID v_key))(EQSIGN (ID has_left) FALSE)(EQSIGN (ID has_right) FALSE)	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID SetRight) (TY-ID-LIST ((ID Tree) (ID rn)))(BLOCK

(EQSIGN (ID right) (ID rn))	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID SetLeft) (TY-ID-LIST ((ID Tree) (ID ln)))(BLOCK

(EQSIGN (ID left) (ID ln))	
(RETURN TRUE)))
(MTD-DECL (ID Tree) (ID GetRight) (TY-ID-LIST )(BLOCK

	
(RETURN (ID right))))
(MTD-DECL (ID Tree) (ID GetLeft) (TY-ID-LIST )(BLOCK

	
(RETURN (ID left))))
(MTD-DECL INT (ID GetKey) (TY-ID-LIST )(BLOCK

	
(RETURN (ID key))))
(MTD-DECL BOOLEAN (ID SetKey) (TY-ID-LIST (INT (ID v_key)))(BLOCK

(EQSIGN (ID key) (ID v_key))	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID GetHas_Right) (TY-ID-LIST )(BLOCK

	
(RETURN (ID has_right))))
(MTD-DECL BOOLEAN (ID GetHas_Left) (TY-ID-LIST )(BLOCK

	
(RETURN (ID has_left))))
(MTD-DECL BOOLEAN (ID SetHas_Left) (TY-ID-LIST (BOOLEAN (ID val)))(BLOCK

(EQSIGN (ID has_left) (ID val))	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID SetHas_Right) (TY-ID-LIST (BOOLEAN (ID val)))(BLOCK

(EQSIGN (ID has_right) (ID val))	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID Compare) (TY-ID-LIST (INT (ID num1))(INT (ID num2)))(BLOCK
	(VAR-DECL BOOLEAN (ID ntb))	(VAR-DECL INT (ID nti))
(EQSIGN (ID ntb) FALSE)(EQSIGN (ID nti) (+ (ID num2) (INTLIT 1)))	(IF (< (ID num1) (ID num2))
		(EQSIGN (ID ntb) FALSE)
				(IF (NOT (< (ID num1) (ID nti)))
			(EQSIGN (ID ntb) FALSE)
			(EQSIGN (ID ntb) TRUE)
		)
	)	
(RETURN (ID ntb))))
(MTD-DECL BOOLEAN (ID Insert) (TY-ID-LIST (INT (ID v_key)))(BLOCK
	(VAR-DECL (ID Tree) (ID new_node))	(VAR-DECL BOOLEAN (ID ntb))	(VAR-DECL BOOLEAN (ID cont))	(VAR-DECL INT (ID key_aux))	(VAR-DECL (ID Tree) (ID current_node))
(EQSIGN (ID new_node) (NEW-OBJECT (ID Tree)))(EQSIGN (ID ntb) (DOT (ID new_node) (FUN-CALL (ID v_key))))(EQSIGN (ID current_node) THIS)(EQSIGN (ID cont) TRUE)(WHILE (ID cont)
	(BLOCK(EQSIGN (ID key_aux) (DOT (ID current_node) (FUN-CALL)))
	(IF (< (ID v_key) (ID key_aux))
		(BLOCK		(IF (DOT (ID current_node) (FUN-CALL))
			(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL)))
			(BLOCK(EQSIGN (ID cont) FALSE)
(EQSIGN (ID ntb) (DOT (ID current_node) (FUN-CALL TRUE)))
(EQSIGN (ID ntb) (DOT (ID current_node) (FUN-CALL (ID new_node))))
)
		)
)
		(BLOCK		(IF (DOT (ID current_node) (FUN-CALL))
			(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL)))
			(BLOCK(EQSIGN (ID cont) FALSE)
(EQSIGN (ID ntb) (DOT (ID current_node) (FUN-CALL TRUE)))
(EQSIGN (ID ntb) (DOT (ID current_node) (FUN-CALL (ID new_node))))
)
		)
)
	)
)
)	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID Delete) (TY-ID-LIST (INT (ID v_key)))(BLOCK
	(VAR-DECL (ID Tree) (ID current_node))	(VAR-DECL (ID Tree) (ID parent_node))	(VAR-DECL BOOLEAN (ID cont))	(VAR-DECL BOOLEAN (ID found))	(VAR-DECL BOOLEAN (ID is_root))	(VAR-DECL INT (ID key_aux))	(VAR-DECL BOOLEAN (ID ntb))
(EQSIGN (ID current_node) THIS)(EQSIGN (ID parent_node) THIS)(EQSIGN (ID cont) TRUE)(EQSIGN (ID found) FALSE)(EQSIGN (ID is_root) TRUE)(WHILE (ID cont)
	(BLOCK(EQSIGN (ID key_aux) (DOT (ID current_node) (FUN-CALL)))
	(IF (< (ID v_key) (ID key_aux))
				(IF (DOT (ID current_node) (FUN-CALL))
			(BLOCK(EQSIGN (ID parent_node) (ID current_node))
(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL)))
)
			(EQSIGN (ID cont) FALSE)
		)
				(IF (< (ID key_aux) (ID v_key))
						(IF (DOT (ID current_node) (FUN-CALL))
				(BLOCK(EQSIGN (ID parent_node) (ID current_node))
(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL)))
)
				(EQSIGN (ID cont) FALSE)
			)
			(BLOCK			(IF (ID is_root)
								(IF (&& (NOT (DOT (ID current_node) (FUN-CALL))) (NOT (DOT (ID current_node) (FUN-CALL))))
					(EQSIGN (ID ntb) TRUE)
					(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID parent_node) (ID current_node))))
				)
				(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID parent_node) (ID current_node))))
			)
(EQSIGN (ID found) TRUE)
(EQSIGN (ID cont) FALSE)
)
		)
	)
(EQSIGN (ID is_root) FALSE)
)
)	
(RETURN (ID found))))
(MTD-DECL BOOLEAN (ID Remove) (TY-ID-LIST ((ID Tree) (ID p_node))((ID Tree) (ID c_node)))(BLOCK
	(VAR-DECL BOOLEAN (ID ntb))	(VAR-DECL INT (ID auxkey1))	(VAR-DECL INT (ID auxkey2))
	(IF (DOT (ID c_node) (FUN-CALL))
		(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID p_node) (ID c_node))))
				(IF (DOT (ID c_node) (FUN-CALL))
			(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID p_node) (ID c_node))))
			(BLOCK(EQSIGN (ID auxkey1) (DOT (ID c_node) (FUN-CALL)))
(EQSIGN (ID auxkey2) (DOT (DOT (ID p_node) (FUN-CALL)) (FUN-CALL)))
			(IF (DOT THIS (FUN-CALL (ID auxkey1) (ID auxkey2)))
				(BLOCK(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID my_null))))
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL FALSE)))
)
				(BLOCK(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID my_null))))
(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL FALSE)))
)
			)
)
		)
	)	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID RemoveRight) (TY-ID-LIST ((ID Tree) (ID p_node))((ID Tree) (ID c_node)))(BLOCK
	(VAR-DECL BOOLEAN (ID ntb))
(WHILE (DOT (ID c_node) (FUN-CALL))
	(BLOCK(EQSIGN (ID ntb) (DOT (ID c_node) (FUN-CALL (DOT (DOT (ID c_node) (FUN-CALL)) (FUN-CALL)))))
(EQSIGN (ID p_node) (ID c_node))
(EQSIGN (ID c_node) (DOT (ID c_node) (FUN-CALL)))
)
)(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID my_null))))(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL FALSE)))	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID RemoveLeft) (TY-ID-LIST ((ID Tree) (ID p_node))((ID Tree) (ID c_node)))(BLOCK
	(VAR-DECL BOOLEAN (ID ntb))
(WHILE (DOT (ID c_node) (FUN-CALL))
	(BLOCK(EQSIGN (ID ntb) (DOT (ID c_node) (FUN-CALL (DOT (DOT (ID c_node) (FUN-CALL)) (FUN-CALL)))))
(EQSIGN (ID p_node) (ID c_node))
(EQSIGN (ID c_node) (DOT (ID c_node) (FUN-CALL)))
)
)(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL (ID my_null))))(EQSIGN (ID ntb) (DOT (ID p_node) (FUN-CALL FALSE)))	
(RETURN TRUE)))
(MTD-DECL INT (ID Search) (TY-ID-LIST (INT (ID v_key)))(BLOCK
	(VAR-DECL BOOLEAN (ID cont))	(VAR-DECL INT (ID ifound))	(VAR-DECL (ID Tree) (ID current_node))	(VAR-DECL INT (ID key_aux))
(EQSIGN (ID current_node) THIS)(EQSIGN (ID cont) TRUE)(EQSIGN (ID ifound) (INTLIT 0))(WHILE (ID cont)
	(BLOCK(EQSIGN (ID key_aux) (DOT (ID current_node) (FUN-CALL)))
	(IF (< (ID v_key) (ID key_aux))
				(IF (DOT (ID current_node) (FUN-CALL))
			(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL)))
			(EQSIGN (ID cont) FALSE)
		)
				(IF (< (ID key_aux) (ID v_key))
						(IF (DOT (ID current_node) (FUN-CALL))
				(EQSIGN (ID current_node) (DOT (ID current_node) (FUN-CALL)))
				(EQSIGN (ID cont) FALSE)
			)
			(BLOCK(EQSIGN (ID ifound) (INTLIT 1))
(EQSIGN (ID cont) FALSE)
)
		)
	)
)
)	
(RETURN (ID ifound))))
(MTD-DECL BOOLEAN (ID Print) (TY-ID-LIST )(BLOCK
	(VAR-DECL (ID Tree) (ID current_node))	(VAR-DECL BOOLEAN (ID ntb))
(EQSIGN (ID current_node) THIS)(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (ID current_node))))	
(RETURN TRUE)))
(MTD-DECL BOOLEAN (ID RecPrint) (TY-ID-LIST ((ID Tree) (ID node)))(BLOCK
	(VAR-DECL BOOLEAN (ID ntb))
	(IF (DOT (ID node) (FUN-CALL))
		(BLOCK(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (DOT (ID node) (FUN-CALL)))))
)
		(EQSIGN (ID ntb) TRUE)
	)(PRINT (DOT (ID node) (FUN-CALL)))	(IF (DOT (ID node) (FUN-CALL))
		(BLOCK(EQSIGN (ID ntb) (DOT THIS (FUN-CALL (DOT (ID node) (FUN-CALL)))))
)
		(EQSIGN (ID ntb) TRUE)
	)	
(RETURN TRUE))))